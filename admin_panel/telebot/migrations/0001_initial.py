# Generated by Django 4.2 on 2023-08-16 09:50

import admin_panel.telebot.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('text', models.TextField(verbose_name='Содержание')),
                ('message_thread_id', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('open', 'Открыта'), ('in_work', 'В работе'), ('done', 'Выполнено'), ('closed', 'Закрыто')], max_length=50, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заявки',
                'verbose_name_plural': 'Заявки',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('username', models.CharField(blank=True, help_text='Username клиента', max_length=50, null=True, verbose_name='Username')),
                ('telegram_id', models.BigIntegerField(help_text='Telegram ID пользователя', verbose_name='Telegram ID')),
                ('name', models.CharField(help_text='Имя в Telegram', max_length=255, verbose_name='Имя в Telegram')),
                ('url', models.CharField(max_length=255, verbose_name='Ссылка на пользователя')),
                ('fcs', models.CharField(max_length=150, verbose_name='ФИО клиента')),
                ('company', models.CharField(max_length=200, verbose_name='Название компании клиента')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Блокировка пользователя')),
            ],
            options={
                'verbose_name': 'Клиенты телеграмм бота',
                'verbose_name_plural': 'Клиенты телеграмм бота',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.CharField(max_length=250, verbose_name='Имя собеседника')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telebot.application')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='media', verbose_name='Файл')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.CharField(max_length=250, verbose_name='Имя собеседника')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='telebot.application')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.AddField(
            model_name='application',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to='telebot.client', verbose_name='Пользователь'),
        ),
    ]
